name: Build and Create Release

on:
  pull_request:
    types:
      - closed
  
permissions:
  contents: write
  pull-requests: write

jobs:
  create-release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.base.ref, 'main') && !startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Git safe directory
        run: git config --global --add safe.directory /home/runner/work/postman-codegen/postman-codegen
      
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Create release branch and PR
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CLASSIC }}
        run: |
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            # Check if PR has tag-like label
              LABEL=$(gh pr view ${{ github.event.pull_request.number }} --json labels -q '.labels[].name' | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$')
              if [ -n "$LABEL" ]; then
              git remote set-url origin https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}
              git checkout -b "release/$LABEL"
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              echo "Trigger release for $LABEL" >> .github/RELEASE_LOG.md
              npm version $LABEL --no-git-tag-version
              git add .github/RELEASE_LOG.md package.json
              git commit -m "chore: set version to $LABEL"
              git push origin "release/$LABEL"
              
              # On process if want use semantic release
              # curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/workflows/prepare-release.yaml/dispatches \
              #   -H "Accept: application/vnd.github.v3+json" \
              #   -H "Authorization: token ${GH_TOKEN}" \
              #   -d '{"ref":"release/'"$LABEL"'"}'

              echo "GH_TOKEN is set: ${{ env.GH_TOKEN != '' }}"

              # âœ… Create PR for this
              gh pr create \
                --base main \
                --head "release/$LABEL" \
                --title "Release $LABEL" \
                --body "Auto-generated PR to merge release \`release/$LABEL\` into main."

              PR_NUMBER=$(gh pr list --head "release/$LABEL" --json number -q '.[0].number')
              gh pr edit "$PR_NUMBER" --add-label "$LABEL"
            fi
          fi

