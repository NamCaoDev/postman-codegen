name: Check PR Tag

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled, edited]

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract tag from PR labels
        id: extract
        run: |
          # Extract version label (vX.Y.Z) from PR labels

          LABELS_JSON=${{ toJson(github.event.pull_request.labels) }}

          LABELS=$(echo "$LABELS_JSON" | jq -r '.[] | select(.name | test("^v[0-9]+\\.[0-9]+\\.[0-9]+$")) | .name')

          # Debug: print the value of LABELS
          echo "Labels extracted: $LABELS"

          # Check if any version label is found
          if [ -z "$LABELS" ]; then
            echo "❌ No version label (vX.Y.Z) found."
            exit 1
          fi

          # Check if there's exactly one version label
          LABEL_COUNT=$(echo "$LABELS" | wc -l)
          if [ "$LABEL_COUNT" -ne 1 ]; then
            echo "❌ There should be exactly one version label, found $LABEL_COUNT."
            exit 1
          fi

          # Set the output version
          echo "version=$LABELS" >> "$GITHUB_OUTPUT"
          echo "Selected version: $LABELS"

      - name: Get current version from NPM
        id: npm
        run: |
          # Get the current version from NPM
          CURRENT=$(npm view @namcaodev/postman-codegen version)
          echo "Current NPM version: $CURRENT"
          echo "current=$CURRENT" >> "$GITHUB_OUTPUT"

      - name: Compare versions
        run: |
          # Compare the new version with the current NPM version using semver
          npm install -g semver
          echo "Comparing ${{ steps.extract.outputs.version }} > ${{ steps.npm.outputs.current }}"
          if ! semver -r ">${{ steps.npm.outputs.current }}" "${{ steps.extract.outputs.version }}"; then
            echo "❌ PR version must be greater than current NPM version."
            exit 1
          else
            echo "✅ Valid version"
          fi
